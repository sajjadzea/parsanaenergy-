name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js 18 (with pnpm cache)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'

      # نصب pnpm به صورت قطعی با Corepack (بدون تکیه به اکشن خارجی)
      - name: Install pnpm via Corepack
        shell: bash
        run: |
          set -e
          corepack enable
          corepack prepare pnpm@9.0.0 --activate
          pnpm -v

      - name: Install workspace deps
        run: pnpm -w install --no-frozen-lockfile

      - name: Preflight
        shell: bash
        run: |
          set -e
          test -f docs/package.json || { echo "Missing docs/package.json"; exit 1; }
          test -f docs/index.html || { echo "Missing docs/index.html"; exit 1; }
          mkdir -p docs/public/articles
          echo "Preflight passed"

      - name: Run prebuild scripts
        shell: bash
        run: |
          set -e
          if [ -f scripts/sync-images.mjs ]; then node scripts/sync-images.mjs; else echo "skip: scripts/sync-images.mjs"; fi
          node scripts/generate-posts.mjs
          node scripts/generate-articles.mjs
          node scripts/minify-articles.mjs

      - name: Lint (soft)
        run: pnpm -r --if-present lint || true

      - name: Workspaces prebuild (soft)
        run: pnpm -r --if-present run prebuild || true

      - name: Guard articles (soft)
        shell: bash
        run: |
          set +e
          if [[ -f scripts/guard-articles.sh ]]; then
            bash scripts/guard-articles.sh || echo "warn: guard-articles failed (soft)"
          else
            echo "skip: scripts/guard-articles.sh not found"
          fi
          exit 0

      - name: Write version file
        shell: bash
        run: |
          echo "build: $(date -u +'%Y-%m-%dT%H:%M:%SZ') | sha: $(git rev-parse --short HEAD)" > docs/public/version.txt

      - name: Build site
        run: pnpm run build

      - name: Finalize dist
        shell: bash
        run: |
          mkdir -p docs/dist
          cp docs/public/version.txt docs/dist/version.txt
          touch docs/dist/.nojekyll
          echo "parsanaenergy.ir" > docs/dist/CNAME

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Check deployed version
        shell: bash
        run: |
          curl -sS https://parsanaenergy.ir/version.txt || echo 'Unable to fetch deployed version'
