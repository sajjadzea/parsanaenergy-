name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# جلوگیری از اجرای هم‌زمان استقرار روی یک شاخه
concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Get pnpm store path
        id: pnpm-store
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      # همسان با CI: از no-frozen-lockfile استفاده می‌کنیم تا اختلاف قفل‌فایل باعث شکست دیپلوی نشود
      - name: Install dependencies (workspaces)
        run: pnpm -w install --no-frozen-lockfile

      - name: Preflight required files
        shell: bash
        run: |
          set -e
          test -f docs/index.html || { echo "❌ Missing docs/index.html"; exit 1; }
          test -f docs/package.json || { echo "❌ Missing docs/package.json"; exit 1; }
          echo "✅ Preflight checks passed."

      # ایجاد مسیر مقالات — از ریشه اجرا می‌شود
      - name: Ensure articles directory exists
        run: mkdir -p docs/public/articles

      # Prebuild اسکریپت‌ها با محافظِ نبود فایل‌ها
      - name: Docs Prebuild (robust)
        shell: bash
        run: |
          set -e
          if [ -f scripts/sync-images.mjs ]; then node scripts/sync-images.mjs; else echo "skip: scripts/sync-images.mjs"; fi
          node scripts/generate-posts.mjs
          node scripts/generate-articles.mjs
          node scripts/minify-articles.mjs

      - name: Lint (non-blocking)
        run: pnpm -r --if-present lint || true

      # اگر در ماژول‌ها اسکریپت prebuild تعریف شده باشد، اجرا شود اما غیرمسدودکننده
      - name: Workspaces prebuild (soft)
        run: pnpm -r --if-present run prebuild || true

      # گارد مقالات — نرم، ایمن نسبت به set -e
      - name: Guard articles (soft)
        shell: bash
        run: |
          set +e
          if [[ -f scripts/guard-articles.sh ]]; then
            bash scripts/guard-articles.sh
            code=$?
            if [[ $code -ne 0 ]]; then
              echo "warn: guard-articles failed (soft) with exit $code"
            fi
          else
            echo "skip: scripts/guard-articles.sh not found"
          fi
          exit 0

      - name: Write version file
        run: |
          echo "build: $(date -u +'%Y-%m-%dT%H:%M:%SZ') | sha: $(git rev-parse --short HEAD)" > docs/public/version.txt

      - name: Build site
        run: pnpm run build

      - name: Ensure version file in dist
        run: |
          mkdir -p docs/dist
          cp docs/public/version.txt docs/dist/version.txt
          test -f docs/dist/version.txt

      - name: Add .nojekyll and CNAME
        run: |
          touch docs/dist/.nojekyll
          echo "parsanaenergy.ir" > docs/dist/CNAME

      # طبق توصیه‌های رسمی GitHub Pages، قبل از آپلود artifact پیکربندی انجام شود
      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Check deployed version
        run: |
          curl -sS https://parsanaenergy.ir/version.txt || echo 'Unable to fetch deployed version'
